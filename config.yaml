# This file determines the settings of your jupyterhub
# if u want a bettter idea of what the code is doing, check out the web links

# https://zero-to-jupyterhub.readthedocs.io/en/latest/setup-jupyterhub.html
proxy:
  secretToken: "2e4859a260ca8afd3bc244e7b8526081b8efd14d441df33a8044a4817b9a6f6b"
singleuser:
  # https://zero-to-jupyterhub.readthedocs.io/en/latest/user-environment.html
  defaultUrl: "/lab/"
  image: 
    name: jupyter/minimal-notebook
    tag: 2343e33dec46
  profileList:
  - display_name: "Minimal environment"
    description: "To avoid too much bells and whistles: Python."
    default: true
  - display_name: "io_hub"
    description: "Jupyter io OS from pupster"
    kubespawner_override:
      image: pupster90/io:latest
      lifecycleHooks:
        postStart:
          exec:
            command: ["sh","-c","rm -rf Welcome_to_io_Hub && git clone https://github.com/pupster90/Welcome_to_io_Hub.git"]
  - display_name: "SysMLv2 from gorenje"
    description: "SysML v2 image from gorenje"
    kubespawner_override:
      image: gorenje/sysmlv2-jupyter:latest
      lifecycleHooks:
        postStart:
          exec:
            command: [pip3 install --no-cache jupyterhub==1.1.0 && npm install proptypes]
  
  - display_name: "SysMLv2 from NJ"
    description: "SysML v2 image modified from gorenje"
    kubespawner_override:
      image: najoshi/sysmlv2-jh:v4

        # cmd: jupyterhub-singleuser
  # https://zero-to-jupyterhub.readthedocs.io/en/latest/user-storage.html
  # NOTE: I couldn't get this working, will try later
  #storage:
  #  dynamic:
  #    storageClass: jupyterhub-user-ssd

# https://zero-to-jupyterhub.readthedocs.io/en/latest/optimization.html
prePuller:
  hook:
    enabled: false
  continuous:
    enabled: true

### Set Allowed Users
# There are 2 ways of doing this, see JupyterHub tutorial    
# https://zero-to-jupyterhub.readthedocs.io/en/latest/authentication.html
# WAY 1: Manually add  allowed users : (this is WAY easier)
#auth:
#  whitelist:
#  users:
#    - user1
#    - user2
#
# WAY 2: Add users using gmail accounts, or Oauth : (this is HARD)
# 1: U need a website name, see google domains:
# https://domains.google/
# 2: U need to registe website with googel webmaster
# https://www.google.com/webmasters/tools/
# 3: U need to Set google cloud DNS records
# https://support.google.com/domains/answer/6147083?hl=en
# 4: This is great video on DNS records
# https://www.youtube.com/watch?v=4iciq0ck8Ns
# 5: Might come in handy (forgot where):
# https://developers.google.com/api-client-library/python/start/get_started
# 6: Again, Might come in handy (forgot where)
# https://gist.github.com/cyrusboadway/5a7b715665f33c237996
#  #  type: google
#  google:
#    clientId: ""
#    clientSecret: ""
#    callbackUrl: "http://urwebsite.com/hub/oauth_callback"
#    hostedDomain: "ucsd.edu"
#    loginService: "UCSD"
